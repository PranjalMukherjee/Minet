deployments:
  - name: mockserver
    labels:
      app: mockserver
      project: bootcamp118
    container:
      name: mockserver-pod
      image: 
        repository: node
        tag: 16-alpine
      ports:
        containerPort: 8080
      readinessProbe:
        httpGet:
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 2
      livenessProbe:
        httpGet:
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 30
      command:
        - "sh"
        - "-c"
      args:
        - "npm i -g json-server; cp /app/minet.json /home/minet.json; json-server -w /home/minet.json -p 8080 -H 0.0.0.0"
      volumeMounts:
        - name:  mock-data
          mountPath: /app
    volumes:
      - name: mock-data
        configMap:
          name:  mockserver-data
          optional: false
    imagePullSecrets:
      - name: my-docker-secret

  - name: frontend
    labels:
      app: frontend
      project: bootcamp118
    container:
      name: frontend-pod
      image: 
        repository: ghcr.io/ishtiaqsamdani007/bc118-fe
        tag: latest
      ports:
        containerPort: 80
      # readinessProbe:
      #   port: 80
      #   path: /
      #   initialDelaySeconds: 3
      #   periodSeconds: 3
      # livenessProbe:
      #   port: 80
      #   path: /
      #   initialDelaySeconds: 30
      #   periodSeconds: 30
    imagePullSecrets:
      - name: my-docker-secret

  - name: database
    labels:
      app: database
      project: bootcamp118
    container:
      name: database-pod
      image: 
        repository: mysql
        tag: latest
      ports:
        containerPort: 3306

      envFrom:
        - secretRef:
            name: mysql-secret
      # readinessProbe:
      #   httpGet:
      #     port: 3306
      #   initialDelaySeconds: 5
      #   periodSeconds: 5
      # livenessProbe:
      #   httpGet:
      #     port: 3306
      #   initialDelaySeconds: 30
      #   periodSeconds: 30
      volumeMounts:
        - name:  database-config
          mountPath: /etc/mysql/conf.d/
        - name:  persist-data
          mountPath: /var/lib/mysql

    volumes:
      - name: database-config
        configMap:
          name: mysql-config
          optional: false
      - name: persist-data
        persistentVolumeClaim:
          claimName: database
          
  - name: cloud-gateway
    labels:
      app: cloud-gateway
      project: bootcamp118
    container:
      name: cloud-gateway-container
      image:
        repository: ghcr.io/ishtiaqsamdani007/bc-118-backend-cloud-gateway
        tag: latest  # Replace with the specific image tag
      ports:
        containerPort: 9191
      env:
        - name: EUREKA_INSTANCE_HOSTNAME
          value: cloud-gateway
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: https://bc118be.spcluster.tk/eureka/
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://18.222.184.161:30001/minet1
        - name: SPRING_DATASOURCE_PASSWORD
          value: Bootcamp@118!
        # - name: SPRING_FLYWAY_ENABLED
        #   value: "false"
    imagePullSecrets:
      - name: my-docker-secret

      
  - name: crypto-service
    labels:
      app: crypto-service
      project: bootcamp118
    container:
      name: crypto-service-container
      image:
        repository: ghcr.io/ishtiaqsamdani007/bc-118-backend-crypto-service
        tag: latest  # Replace with the specific image tag
      ports:
        containerPort: 9003
      env:
        - name: EUREKA_INSTANCE_HOSTNAME
          value: crypto-service
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: https://bc118be.spcluster.tk/eureka/
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://18.222.184.161:30001/minet1
        - name: SPRING_DATASOURCE_PASSWORD
          value: Bootcamp@118!
        # - name: SPRING_FLYWAY_ENABLED
        #   value: "false"
    imagePullSecrets:
      - name: my-docker-secret

      
  - name: portfolio-service
    labels:
      app: portfolio-service
      project: bootcamp118
    container:
      name: portfolio-service-container
      image:
        repository: ghcr.io/ishtiaqsamdani007/bc-118-backend-portfolio-service
        tag: latest  # Replace with the specific image tag
      ports:
        containerPort: 9004
      env:
        - name: EUREKA_INSTANCE_HOSTNAME
          value: portfolio-service
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: https://bc118be.spcluster.tk/eureka/
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://18.222.184.161:30001/minet1
        - name: SPRING_DATASOURCE_PASSWORD
          value: Bootcamp@118!
        # - name: SPRING_FLYWAY_ENABLED
        #   value: "false"
    imagePullSecrets:
      - name: my-docker-secret

      
  - name: service-registry
    labels:
      app: service-registry
      project: bootcamp118
    container:
      name: service-registry-container
      image:
        repository: ghcr.io/ishtiaqsamdani007/bc-118-backend-service-registry
        tag: latest  # Replace with the specific image tag
      ports:
        containerPort: 8761
      env:
        - name: EUREKA_INSTANCE_HOSTNAME
          value: service-registry
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: https://bc118be.spcluster.tk/eureka/
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://18.222.184.161:30001/minet1
        - name: SPRING_DATASOURCE_PASSWORD
          value: Bootcamp@118!
        # - name: SPRING_FLYWAY_ENABLED
        #   value: "false"
    imagePullSecrets:
      - name: my-docker-secret
 
  - name: user-service
    labels:
      app: user-service
      project: bootcamp118
    container:
      name: user-service-container
      image:
        repository: ghcr.io/ishtiaqsamdani007/bc-118-backend-user-service
        tag: latest  # Replace with the specific image tag
      ports:
        containerPort: 9001
      env:
        - name: EUREKA_INSTANCE_HOSTNAME
          value: user-service
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: https://bc118be.spcluster.tk/eureka/
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://18.222.184.161:30001/minet1
        - name: SPRING_DATASOURCE_PASSWORD
          value: Bootcamp@118!
        # - name: SPRING_FLYWAY_ENABLED
        #   value: "false"
    imagePullSecrets:
      - name: my-docker-secret
      
  - name: wallet-service
    labels:
      app: wallet-service
      project: bootcamp118
    container:
      name: wallet-service-container
      image:
        repository: ghcr.io/ishtiaqsamdani007/bc-118-backend-wallet-service
        tag: latest  # Replace with the specific image tag
      ports:
        containerPort: 9002
      env:
        - name: EUREKA_INSTANCE_HOSTNAME
          value: wallet-service
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: https://bc118be.spcluster.tk/eureka/
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://18.222.184.161:30001/minet1
        - name: SPRING_DATASOURCE_PASSWORD
          value: Bootcamp@118!
        # - name: SPRING_FLYWAY_ENABLED
        #   value: "false"
    imagePullSecrets:
      - name: my-docker-secret

services:
  - name: mockserver
    labels:
      app: mockserver
      project: bootcamp118
    port: 8080
    targetPort: 8080

  - name: database
    type: NodePort
    labels:
      app: database
      project: bootcamp118
    port: 3306
    targetPort: 3306
    nodePort: 30001

  - name: frontend
    labels:
      app: frontend
      project: bootcamp118
    port: 80
    targetPort: 80

  - name: cloud-gateway
    labels:
      app: cloud-gateway
      project: bootcamp118
    port: 9191
    targetPort: 9191

  - name: crypto-service
    labels:
      app: crypto-service
      project: bootcamp118
    port: 9003
    targetPort: 9003

  - name: portfolio-service
    labels:
      app: portfolio-service
      project: bootcamp118
    port: 9004
    targetPort: 9004

  - name: service-registry
    labels:
      app: service-registry
      project: bootcamp118
    port: 8761
    targetPort: 8761

  - name: user-service
    labels:
      app: user-service
      project: bootcamp118
    port: 9001
    targetPort: 9001

  - name: wallet-service
    labels:
      app: wallet-service
      project: bootcamp118
    port: 9002
    targetPort: 9002


ingress:
  name: ingress-bc-118
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
  ingressClassName: nginx
  rules:
    - host: bc118ms.spcluster.tk
      http:
        paths:
          - path: /
            pathType: Prefix
            serviceName: mockserver
            servicePort: 8080
    - host: bc118fe.spcluster.tk
      http:
        paths:
          - path: /
            pathType: Prefix
            serviceName: frontend
            servicePort: 80
      
    - host: bc118be.spcluster.tk
      http:
        paths:
          - path: /$
            pathType: Exact
            serviceName: service-registry
            servicePort: 8761
          - path: /eureka
            pathType: Prefix
            serviceName: service-registry
            servicePort: 8761
          - path: /
            pathType: Prefix
            serviceName: cloud-gateway
            servicePort: 9191

pvc:
  name: database
  storageClassName: gp2
  storageSize: 2Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem

secrets:
  - name: my-docker-secret
    type: kubernetes.io/dockerconfigjson
    data: 
      .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaGNyLmlvIjogewoJCQkiYXV0aCI6ICJhWE5vZEdsaGNYTmhiV1JoYm1rd01EYzZaMmh3WDNSWmRIZEhWRnBsU1RGMFV6bHFNalJzTlU1YWFtUndkazFqUlc5c2REUmtha3A2U0E9PSIKCQl9LAoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImFYTm9kR2xoY1hOaGJXUmhibWs2U1NSb2RHbEFjVGM0Tmc9PSIKCQl9Cgl9Cn0=

  - name: mysql-secret
    type: Opaque
    data:
      MYSQL_ROOT_PASSWORD: Bootcamp@118!

  
configmaps:
  - name:  mysql-config
    file: config.cnf
    content: |
      [mysqld]
      max_connections=4000